---
- name: Init a new swarm with default parameters
  docker_swarm:
    state: present
    # advertise_addr: "{{ ansible_eth0['ipv4']['address'] }}"
  register: swarm_create

  # register: swarm_info
- name: Update swarm configuration
  docker_swarm:
    state: present
    election_tick: 5
# - name: Add nodes
#   docker_swarm:
#     state: join
#     advertise_addr: "{{ ansible_eth0['ipv4']['address'] }}"
#     join_token: "{{ hostvars[groups['tag_Name_manager'][0]]['swarm_create']['swarm_facts']['JoinTokens']['Worker'] }}"
#     remote_addrs: "{{ hostvars[groups['tag_Name_manager'][0]]['ansible_eth0']['ipv4']['address'] }}:2377"

#      - name: Join Swarm Cluster
#     hosts: workers
#     remote_user: ec2-user
#     gather_facts: False
#     vars:
#       token: "{{ hostvars[groups['masters'][0]]['worker_token']['stdout'] }}"
#       master: "{{ hostvars[groups['masters'][0]]['inventory_hostname'] }}"
# - name: Add nodes
#   docker_swarm:
#     state: join
#     advertise_addr: "{{ manager_public_ip }}"
#     join_token: "{{ hostvars[groups['tag_Name_manager'][0]]['swarm_create']['swarm_facts']['JoinTokens']['Worker'] }}"
#     remote_addrs: "{{ hostvars[groups['tag_Name_manager'][0]]['ansible_eth0']['ipv4']['address'] }}:2377"
# ### playbook.yml
# ---
#   - name: Init Swarm Master
#     hosts: masters
#     become: true
#     gather_facts: False
#     remote_user: ec2-user
#     tasks:
#       - name: Swarm Init
#         command: sudo usermod -aG docker {{remote_user}}
#         command: docker swarm init --advertise-addr {{ inventory_hostname }}
#       - name: Get Worker Token
#         command: docker swarm join-token worker -q
#         register: worker_token
#       - name: Show Worker Token
#         debug:
#           var: worker_token.stdout
#       - name: Master Token
#         command: docker swarm join-token manager -q
#         register: master_token
#       - name: Show Master Token
#         debug:
#           var: master_token.stdout
#   - name: Join Swarm Cluster
#     hosts: workers
#     become: true
#     remote_user: ec2-user
#     gather_facts: False
#     vars:
#       token: "{{ hostvars[groups['masters'][0]]['worker_token']['stdout'] }}"
#       master: "{{ hostvars[groups['masters'][0]]['inventory_hostname'] }}"
#     tasks:
#       - name: Join Swarm Cluster as a Worker
#         command: sudo usermod -aG docker {{remote_user}}
#         command: sudo docker swarm join --token {{ token }} {{ master }}:2377
#         register: worker
#       - name: Show Results
#         debug:
#           var: worker.stdout
#       - name: Show Errors
#         debug:
#           var: worker.stderr

#  - name: Join Swarm Cluster
#     hosts: workers
#     remote_user: ec2-user
#     gather_facts: False
#     vars:
#       token: "{{ hostvars[groups['masters'][0]]['worker_token']['stdout'] }}"
#       master: "{{ hostvars[groups['masters'][0]]['inventory_hostname'] }}"
#     tasks:
#       - name: Check if Swarm Mode in worker is already activated
#         command: docker info
#         register: docker_info
#         changed_when: false

#       - name: Join Swarm Cluster as a Worker
#         command: docker swarm join --token {{ token }} {{ master }}:2377
#         when: "'Swarm: active' not in docker_info.stdout"
#         register: worker

- name: Start docker stack
  # hosts: 34.222.140.146
  become: true
  gather_facts: False
  remote_user: ec2-user
  tasks:
    - name: Copy docker folder
      copy:
        src: docker-compose.yml
        dest: /home/ec2-user/
      changed_when: False

    - name: docker stack
      command: docker stack deploy --compose-file=docker-compose.yml tutum_stack
      changed_when: False
